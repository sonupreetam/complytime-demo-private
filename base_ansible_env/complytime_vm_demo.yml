---
- name: "ComplyTime VM Demo - Setup and Execution"
  hosts: demo_vm
  become: false
  vars:
    demo_framework: "cusp_fedora"
    use_vm_inventory: true
    complyctl_workspace: "~/.local/share/complytime"
    
    # CUSP content URLs (using CUSP Fedora content)
    catalog: "https://github.com/ComplianceAsCode/oscal-content/raw/refs/heads/main/catalogs/cusp_fedora/catalog.json"
    profile: "https://github.com/ComplianceAsCode/oscal-content/raw/refs/heads/main/profiles/fedora-cusp_fedora-default/profile.json"
    component_definition: "https://github.com/ComplianceAsCode/oscal-content/raw/refs/heads/main/component-definitions/fedora/fedora-cusp_fedora-default/component-definition.json"

    catalog_file: "cusp-catalog.json"
    profile_file: "cusp-profile.json"
    component_definition_file: "cusp-component-definition.json"
    
  tasks:
    - name: "Include VM setup playbook"
      import_tasks: setup_vm_demo.yml
      
    - name: "Wait for setup to complete"
      pause:
        seconds: 2
        
    - name: "Include VM demo commands playbook"
      import_tasks: run_vm_demo_commands.yml
      
    - name: "Final VM demo summary"
      debug:
        msg: |
          ðŸš€ COMPLYTIME VM DEMO COMPLETE! ðŸš€
          
          ============================================
          SUCCESSFULLY DEMONSTRATED:
          ============================================
          
          1. âœ… Complete VM Environment Setup
             - Fedora VM with all dependencies
             - complyctl built and installed
             - OpenSCAP plugin configured with template
             - CUSP Fedora content configured
             - Used ansible_inventory for VM connection
          
          2. âœ… VM-based Compliance Framework Operations
             - Listed available frameworks (CUSP Fedora)
             - Retrieved detailed control information
             - Generated custom assessment plan using demo_cusp_config_plan.yml
             - Created compliance workspace on VM
          
          3. âœ… File Structure Created on VM
             - Assessment Plan: complytime/assessment-plan.json
             - CUSP Catalog, Profile, Component Definition
             - Plugin manifest and binary (using template)
             - Complete workspace structure
          
          ============================================
          VM DEMO FEATURES:
          ============================================
          
          - Uses ansible_inventory for VM connection
          - Uses ansible.cfg configuration
          - Runs on actual VM instead of container
          - Demonstrates real-world deployment scenario
          - Uses demo_cusp_config_plan.yml for customization
          
          ============================================
          READY FOR PRODUCTION USE:
          ============================================
          
          The VM demo environment is now ready for:
          - Production VM compliance scanning
          - Custom assessment plan configuration
          - Policy generation and management
          - Integration with existing VM infrastructure
          
          ============================================
          QUICK REFERENCE COMMANDS:
          ============================================
          
          # Connect to VM
          ssh root@localhost -p 2222
          
          # List frameworks
          complyctl list
          
          # Get CUSP framework details
          complyctl info cusp_fedora
          
          # Generate assessment plan with custom config
          complyctl plan cusp_fedora --scope-config files/demo_cusp_config_plan.yml
          
          # Generate policy files
          complyctl generate
          
          # Run compliance scan
          complyctl scan
          
          ============================================
          ðŸŽ¯ VM Demo completed successfully! ðŸŽ¯
          ============================================

  handlers:
    - name: "Update profile references"
      replace:
        path: "{{ complyctl_workspace }}/bundles/{{ component_definition_file }}"
        regexp: "trestle://.*"
        replace: "trestle://controls/{{ profile_file }}"

    - name: "Update catalog references"
      replace:
        path: "{{ complyctl_workspace }}/controls/{{ profile_file }}"
        regexp: "trestle://.*"
        replace: "trestle://controls/{{ catalog_file }}"
